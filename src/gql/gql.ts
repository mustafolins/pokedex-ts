/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n    query AllPokemonData {\n      pokemon: pokemon_v2_pokemon {\n          base_experience\n          height\n          id\n          is_default\n          name\n          order\n          pokemon_species_id\n          weight\n          pokemon_v2_pokemonsprites {\n              id\n              sprites\n          }\n      }\n    }\n": types.AllPokemonDataDocument,
    "\n    query PokemonTypes {\n        types: pokemon_v2_type{\n            id\n            name\n        }\n    }\n": types.PokemonTypesDocument,
    "\n    query PokemonHeightWeight($height: Int = 0, $weight: Int = 0) {\n        pokemon: pokemon_v2_pokemon(\n            where: { height: { _gte: $height }, weight: { _gte: $weight } }\n        ) {\n            id\n        }\n    }\n": types.PokemonHeightWeightDocument,
    "\n    query PokemonHeightWeightType($height: Int = 0, $weight: Int = 0, $type: String) {\n        pokemon: pokemon_v2_pokemon(\n            where: {\n                height: { _gte: $height }\n                weight: { _gte: $weight }\n                _and: [{\n                    pokemon_v2_pokemontypes: { pokemon_v2_type: { name: { _eq: $type } } }\n                }]\n            }\n        ) {\n            id\n        }\n    }\n": types.PokemonHeightWeightTypeDocument,
    "\n    query PokemonDetail($id: Int = 1) {\n        pokemon: pokemon_v2_pokemon(where: { id: { _eq: $id } }) {\n            base_experience\n            height\n            id\n            is_default\n            name\n            order\n            pokemon_species_id\n            weight\n            pokemon_v2_encounters {\n                encounter_slot_id\n                id\n                location_area_id\n                max_level\n                min_level\n                pokemon_id\n                version_id\n                pokemon_v2_encounterslot {\n                    encounter_method_id\n                    id\n                    rarity\n                    slot\n                    version_group_id\n                    encoutnermethod: pokemon_v2_encountermethod {\n                        id\n                        name\n                        order\n                    }\n                }\n                pokemon_v2_locationarea {\n                    game_index\n                    id\n                    location_id\n                    name\n                    pokemon_v2_location {\n                        id\n                        name\n                        region_id\n                        pokemon_v2_locationnames(where: { language_id: { _eq: 9 } }) {\n                            id\n                            location_id\n                            name\n                        }\n                    }\n                }\n            }\n            pokemon_v2_pokemonabilities {\n                ability_id\n                id\n                is_hidden\n                pokemon_id\n                slot\n                pokemon_v2_ability {\n                    generation_id\n                    id\n                    is_main_series\n                    name\n                    pokemon_v2_abilitychanges {\n                        ability_id\n                        id\n                    }\n                    pokemon_v2_abilityeffecttexts(\n                        where: { language_id: { _eq: 9 } }\n                    ) {\n                        id\n                        ability_id\n                        effect\n                        short_effect\n                    }\n                }\n            }\n            pokemon_v2_pokemontypes {\n                id\n                pokemon_id\n                slot\n                type_id\n                pokemon_v2_type {\n                    id\n                    move_damage_class_id\n                    name\n                }\n            }\n            pokemon_v2_pokemonstats {\n                base_stat\n                effort\n                id\n                pokemon_id\n                stat_id\n                pokemon_v2_stat {\n                    id\n                    is_battle_only\n                    move_damage_class_id\n                    name\n                }\n            }\n            pokemon_v2_pokemonmoves {\n                id\n                level\n                move_id\n                move_learn_method_id\n                order\n                pokemon_id\n                version_group_id\n                pokemon_v2_move {\n                    accuracy\n                    contest_effect_id\n                    contest_type_id\n                    generation_id\n                    id\n                    move_damage_class_id\n                    move_effect_chance\n                    move_effect_id\n                    move_target_id\n                    name\n                    power\n                    pokemon_v2_moveflavortexts(where: { language_id: { _eq: 9 } }) {\n                        flavor_text\n                    }\n                    pokemon_v2_movedamageclass {\n                        name\n                    }\n                }\n                pokemon_v2_movelearnmethod {\n                    id\n                    name\n                    pokemon_v2_movelearnmethoddescriptions(\n                        where: { language_id: { _eq: 9 } }\n                    ) {\n                        id\n                        description\n                    }\n                }\n            }\n            pokemon_v2_pokemonsprites {\n                sprites\n            }\n        }\n    }\n": types.PokemonDetailDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query AllPokemonData {\n      pokemon: pokemon_v2_pokemon {\n          base_experience\n          height\n          id\n          is_default\n          name\n          order\n          pokemon_species_id\n          weight\n          pokemon_v2_pokemonsprites {\n              id\n              sprites\n          }\n      }\n    }\n"): (typeof documents)["\n    query AllPokemonData {\n      pokemon: pokemon_v2_pokemon {\n          base_experience\n          height\n          id\n          is_default\n          name\n          order\n          pokemon_species_id\n          weight\n          pokemon_v2_pokemonsprites {\n              id\n              sprites\n          }\n      }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query PokemonTypes {\n        types: pokemon_v2_type{\n            id\n            name\n        }\n    }\n"): (typeof documents)["\n    query PokemonTypes {\n        types: pokemon_v2_type{\n            id\n            name\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query PokemonHeightWeight($height: Int = 0, $weight: Int = 0) {\n        pokemon: pokemon_v2_pokemon(\n            where: { height: { _gte: $height }, weight: { _gte: $weight } }\n        ) {\n            id\n        }\n    }\n"): (typeof documents)["\n    query PokemonHeightWeight($height: Int = 0, $weight: Int = 0) {\n        pokemon: pokemon_v2_pokemon(\n            where: { height: { _gte: $height }, weight: { _gte: $weight } }\n        ) {\n            id\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query PokemonHeightWeightType($height: Int = 0, $weight: Int = 0, $type: String) {\n        pokemon: pokemon_v2_pokemon(\n            where: {\n                height: { _gte: $height }\n                weight: { _gte: $weight }\n                _and: [{\n                    pokemon_v2_pokemontypes: { pokemon_v2_type: { name: { _eq: $type } } }\n                }]\n            }\n        ) {\n            id\n        }\n    }\n"): (typeof documents)["\n    query PokemonHeightWeightType($height: Int = 0, $weight: Int = 0, $type: String) {\n        pokemon: pokemon_v2_pokemon(\n            where: {\n                height: { _gte: $height }\n                weight: { _gte: $weight }\n                _and: [{\n                    pokemon_v2_pokemontypes: { pokemon_v2_type: { name: { _eq: $type } } }\n                }]\n            }\n        ) {\n            id\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query PokemonDetail($id: Int = 1) {\n        pokemon: pokemon_v2_pokemon(where: { id: { _eq: $id } }) {\n            base_experience\n            height\n            id\n            is_default\n            name\n            order\n            pokemon_species_id\n            weight\n            pokemon_v2_encounters {\n                encounter_slot_id\n                id\n                location_area_id\n                max_level\n                min_level\n                pokemon_id\n                version_id\n                pokemon_v2_encounterslot {\n                    encounter_method_id\n                    id\n                    rarity\n                    slot\n                    version_group_id\n                    encoutnermethod: pokemon_v2_encountermethod {\n                        id\n                        name\n                        order\n                    }\n                }\n                pokemon_v2_locationarea {\n                    game_index\n                    id\n                    location_id\n                    name\n                    pokemon_v2_location {\n                        id\n                        name\n                        region_id\n                        pokemon_v2_locationnames(where: { language_id: { _eq: 9 } }) {\n                            id\n                            location_id\n                            name\n                        }\n                    }\n                }\n            }\n            pokemon_v2_pokemonabilities {\n                ability_id\n                id\n                is_hidden\n                pokemon_id\n                slot\n                pokemon_v2_ability {\n                    generation_id\n                    id\n                    is_main_series\n                    name\n                    pokemon_v2_abilitychanges {\n                        ability_id\n                        id\n                    }\n                    pokemon_v2_abilityeffecttexts(\n                        where: { language_id: { _eq: 9 } }\n                    ) {\n                        id\n                        ability_id\n                        effect\n                        short_effect\n                    }\n                }\n            }\n            pokemon_v2_pokemontypes {\n                id\n                pokemon_id\n                slot\n                type_id\n                pokemon_v2_type {\n                    id\n                    move_damage_class_id\n                    name\n                }\n            }\n            pokemon_v2_pokemonstats {\n                base_stat\n                effort\n                id\n                pokemon_id\n                stat_id\n                pokemon_v2_stat {\n                    id\n                    is_battle_only\n                    move_damage_class_id\n                    name\n                }\n            }\n            pokemon_v2_pokemonmoves {\n                id\n                level\n                move_id\n                move_learn_method_id\n                order\n                pokemon_id\n                version_group_id\n                pokemon_v2_move {\n                    accuracy\n                    contest_effect_id\n                    contest_type_id\n                    generation_id\n                    id\n                    move_damage_class_id\n                    move_effect_chance\n                    move_effect_id\n                    move_target_id\n                    name\n                    power\n                    pokemon_v2_moveflavortexts(where: { language_id: { _eq: 9 } }) {\n                        flavor_text\n                    }\n                    pokemon_v2_movedamageclass {\n                        name\n                    }\n                }\n                pokemon_v2_movelearnmethod {\n                    id\n                    name\n                    pokemon_v2_movelearnmethoddescriptions(\n                        where: { language_id: { _eq: 9 } }\n                    ) {\n                        id\n                        description\n                    }\n                }\n            }\n            pokemon_v2_pokemonsprites {\n                sprites\n            }\n        }\n    }\n"): (typeof documents)["\n    query PokemonDetail($id: Int = 1) {\n        pokemon: pokemon_v2_pokemon(where: { id: { _eq: $id } }) {\n            base_experience\n            height\n            id\n            is_default\n            name\n            order\n            pokemon_species_id\n            weight\n            pokemon_v2_encounters {\n                encounter_slot_id\n                id\n                location_area_id\n                max_level\n                min_level\n                pokemon_id\n                version_id\n                pokemon_v2_encounterslot {\n                    encounter_method_id\n                    id\n                    rarity\n                    slot\n                    version_group_id\n                    encoutnermethod: pokemon_v2_encountermethod {\n                        id\n                        name\n                        order\n                    }\n                }\n                pokemon_v2_locationarea {\n                    game_index\n                    id\n                    location_id\n                    name\n                    pokemon_v2_location {\n                        id\n                        name\n                        region_id\n                        pokemon_v2_locationnames(where: { language_id: { _eq: 9 } }) {\n                            id\n                            location_id\n                            name\n                        }\n                    }\n                }\n            }\n            pokemon_v2_pokemonabilities {\n                ability_id\n                id\n                is_hidden\n                pokemon_id\n                slot\n                pokemon_v2_ability {\n                    generation_id\n                    id\n                    is_main_series\n                    name\n                    pokemon_v2_abilitychanges {\n                        ability_id\n                        id\n                    }\n                    pokemon_v2_abilityeffecttexts(\n                        where: { language_id: { _eq: 9 } }\n                    ) {\n                        id\n                        ability_id\n                        effect\n                        short_effect\n                    }\n                }\n            }\n            pokemon_v2_pokemontypes {\n                id\n                pokemon_id\n                slot\n                type_id\n                pokemon_v2_type {\n                    id\n                    move_damage_class_id\n                    name\n                }\n            }\n            pokemon_v2_pokemonstats {\n                base_stat\n                effort\n                id\n                pokemon_id\n                stat_id\n                pokemon_v2_stat {\n                    id\n                    is_battle_only\n                    move_damage_class_id\n                    name\n                }\n            }\n            pokemon_v2_pokemonmoves {\n                id\n                level\n                move_id\n                move_learn_method_id\n                order\n                pokemon_id\n                version_group_id\n                pokemon_v2_move {\n                    accuracy\n                    contest_effect_id\n                    contest_type_id\n                    generation_id\n                    id\n                    move_damage_class_id\n                    move_effect_chance\n                    move_effect_id\n                    move_target_id\n                    name\n                    power\n                    pokemon_v2_moveflavortexts(where: { language_id: { _eq: 9 } }) {\n                        flavor_text\n                    }\n                    pokemon_v2_movedamageclass {\n                        name\n                    }\n                }\n                pokemon_v2_movelearnmethod {\n                    id\n                    name\n                    pokemon_v2_movelearnmethoddescriptions(\n                        where: { language_id: { _eq: 9 } }\n                    ) {\n                        id\n                        description\n                    }\n                }\n            }\n            pokemon_v2_pokemonsprites {\n                sprites\n            }\n        }\n    }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;